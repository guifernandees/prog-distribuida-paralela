Elapsed Time: 0.627s
    CPU Time: 5.026s
        Effective Time: 5.026s
            Idle: 0.005s
            Poor: 5.021s
            Ok: 0s
            Ideal: 0s
            Over: 0s
        Spin Time: 0s
        Overhead Time: 0s
    Instructions Retired: 22,873,500,000
    Microarchitecture Usage: 38.3% of Pipeline Slots
     | You code efficiency on this platform is too low.
     | 
     | Possible cause: memory stalls, instruction starvation, branch
     | misprediction or long latency instructions.
     | 
     | Next steps: Run Microarchitecture Exploration analysis to identify the
     | cause of the low microarchitecture usage efficiency.
     |
        CPI Rate: 0.575
    Total Thread Count: 16
    Paused Time: 0s

Top Hotspots
Function                          Module            CPU Time
--------------------------------  ----------------  --------
simulate_permutation.constprop.0  pfs                 3.134s
func@0xeb34                       libgomp.so.1.0.0    1.377s
__memcpy_avx_unaligned_erms       libc.so.6           0.085s
_int_free                         libc.so.6           0.065s
malloc                            libc.so.6           0.060s
[Others]                          N/A                 0.305s
Effective Physical Core Utilization: 40.0% (8.009 out of 20)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 20.0% (8.013 out of 40)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
Collection and Platform Info
    Application Command Line: ./pfs 
    Operating System: 6.1.0-23-amd64 12.8
    Computer Name: hype1
    Result Size: 5.3 MB 
    Collection start time: 03:15:28 25/04/2025 UTC
    Collection stop time: 03:15:28 25/04/2025 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) E5/E7 v3 Processor code named Haswell
        Frequency: 2.297 GHz 
        Logical CPU Count: 40
        Cache Allocation Technology
            Level 2 capability: not detected
            Level 3 capability: not detected

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
